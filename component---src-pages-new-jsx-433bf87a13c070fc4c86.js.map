{"version":3,"sources":["webpack:///./src/pages/new.jsx","webpack:///./src/components/Input.jsx"],"names":["connect","state","me","global","React","useState","processing","setProcessing","undefined","success","setSuccess","name","setName","icon","setIcon","css","title","description","placeholder","value","setValue","maxLength","required","pattern","disabled","onClick","length","test","isBrowser","window","fetch","process","method","headers","token","body","JSON","stringify","then","res","ok","json","Error","statusText","navigate","code","catch","e","console","error","Toggle","enabled","toggleHandler","display","alignItems","opacity","width","height","padding","justifyContent","borderRadius","backgroundColor","boxShadow","transition","cursor","transform","checked","type","onChange","BaseDropdown","options","selectKey","selectValue","rest","target","Object","keys","map","option","key","marginLeft","pointerEvents","AbstractInput","pretext","Text","props","URL","Email","Dropdown"],"mappings":"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","file":"component---src-pages-new-jsx-433bf87a13c070fc4c86.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { navigate } from \"gatsby\";\n\nimport Helmet from \"../components/Helmet\";\nimport * as Input from \"../components/Input\";\nimport isBrowser from \"../utils/isBrowser\";\n\nconst NewOrgPage = ({ me }) => {\n    const [ processing, setProcessing ] = React.useState(false);\n    const [ success, setSuccess ] = React.useState(undefined);\n\n    const [ name, setName ] = React.useState(\"\");\n    const [ icon, setIcon ] = React.useState(\"\");\n\n    const createOrg = () => {\n        if (processing) return;\n\n        if (name.length < 1 || name.length > 32) return setSuccess(false);\n        if (icon && icon.length > 2048) return setSuccess(false);\n        if (icon && !/^(((?:https:\\/\\/)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w\\-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?\\.(?:png|jpg|jpeg|bmp))$/i.test(icon)) return setSuccess(false);\n\n        setProcessing(true);\n\n        if (!isBrowser()) return;\n\n        window.fetch(process.env.API_URL + \"/orgs\", {\n            method: \"POST\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": me.token,\n            },\n            body: JSON.stringify({\n                name,\n                icon,\n            }),\n        }).then(res => {\n            if (res.ok) return res.json();\n            throw new Error(res.statusText);\n        }).then(res => {\n            setSuccess(true);\n            navigate(\"/\" + res.code);\n        }).catch((e) => {\n            console.error(e);\n            setSuccess(false);\n            setProcessing(false);\n        });\n    };\n\n    return (\n        <div css={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"100%\",\n            maxWidth: 720,\n            margin: \"0 auto\",\n        }}>\n            <Helmet\n                title=\"Create Organization\"\n                description=\"Create a new organization in Glee.\"\n            />\n            <div css={{ fontSize: \"1.2em\", margin: \"25px 0\" }}>Create a new organization</div>\n\n            <div css={{ color: \"lightgrey\", fontSize: \".9em\", marginBottom: 5 }}>Organization Details</div>\n            <div css={{ color: \"darkgrey\", fontSize: \".8em\", marginBottom: 15 }}>Information required by Glee.</div>\n            <div css={{ width: \"100%\" }}>\n                <div>\n                    <Input.Text\n                        title=\"Name\"\n                        description=\"Publicly visible name of your organization\"\n                        placeholder=\"e.g. Glee\"\n                        value={ name }\n                        setValue={ setName }\n                        maxLength={ 32 }\n                        required={ true }\n                    />\n                    <Input.URL\n                        title=\"Icon\"\n                        description=\"An https URL to the logo or icon of the organization\"\n                        placeholder=\"e.g. https://github.com/gleeapp.png\"\n                        value={ icon }\n                        setValue={ setIcon }\n                        pattern=\"https://.*\"\n                        maxLength={ 2048 }\n                    />\n                </div>\n            </div>\n\n            <div css={{\n                fontSize: \".8em\",\n                marginTop: 10,\n            }}>\n                <div css={{ marginBottom: 10 }}>\n                    {\n                        success === true\n                        ?   <div css={{ color: \"var(--green)\" }}>{ name || \"Your organization\" } has been successfully created!</div>\n                        :   success === false\n                            ?   <div css={{ color: \"var(--red)\" }}>Unable to create the organization. Make sure you've entered the details correctly. If it doesn't work, please contact support.</div>\n                            :   <div css={{ color: \"var(--green)\" }}>Start for free, upgrade later!</div>\n                    }\n                </div>\n\n                <button\n                    disabled={ processing || !name }\n                    css={{\n                        fontSize: \"inherit\",\n                        \":disabled\": {\n                            color: \"var(--light)\",\n                            backgroundColor: \"rgba(100, 100, 100, .2)\",\n                            cursor: \"disallowed\",\n                        },\n                    }}\n                    onClick={ createOrg }\n                >\n                    {\n                        processing\n                        ?   \"Creating\"\n                        :   \"Create Organization\"\n                    }\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(\n    state => ({ me: state.global.me }),\n    null,\n)(NewOrgPage);\n","import React from \"react\";\nimport { IoIosArrowDown } from \"react-icons/io\";\n\nexport const Toggle = ({ enabled, toggleHandler, disabled }) => (\n    <label css={{\n        display: \"flex\",\n        alignItems: \"center\",\n        opacity: disabled ? .5 : 1,\n    }}>\n        <div css={{\n            width: 45,\n            height: 24,\n            padding: 2,\n            display: \"flex\",\n            justifyContent: \"center\",\n            borderRadius: 50,\n            backgroundColor: enabled ? \"var(--green)\" : \"rgba(100, 100, 100, .2)\",\n            boxShadow: \"0px 0px 3px -2px black inset\",\n            transition: \"background-color var(--transition-default-time) ease\",\n            cursor: disabled ? \"not-allowed\" : \"pointer\",\n            \":hover\": {\n                backgroundColor: enabled ? \"#34c759\" : \"rgba(100, 100, 100, .3)\",\n            },\n            \":focus-within\": {\n                backgroundColor: enabled ? \"#34c759\" : \"rgba(100, 100, 100, .3)\",\n            },\n        }}>\n            <div css={{\n                width: 20,\n                height: 20,\n                borderRadius: 50,\n                backgroundColor: \"var(--light)\",\n                boxShadow: \"0px 0px 3px -2px black\",\n                transform: enabled ? \"translateX(10px)\" : \"translateX(-10px)\",\n                transition: \"transform var(--transition-default-time) ease, background-color var(--transition-default-time) ease\",\n            }} />\n        </div>\n        <input\n            disabled={ disabled }\n            checked={ enabled }\n            type=\"checkbox\"\n            css={{\n                appearance: \"none\",\n            }}\n            onChange={ toggleHandler }\n        />\n    </label>\n);\n\nexport const BaseDropdown = ({ options, selectKey, selectValue, value, setValue, placeholder, ...rest }) => (\n    <div css={{\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n    }}>\n        { /* eslint-disable-next-line jsx-a11y/no-onchange */ }\n        <select\n            value={ value ? value : \"--placeholder\" }\n            css={{\n                appearance: \"none\",\n                flex: \"auto\",\n                color: \"inherit\",\n                backgroundColor: \"transparent\",\n                border: \"none\",\n                cursor: \"pointer\",\n                paddingRight: 15,\n                \":invalid\": {\n                    outline: 0,\n                    boxShadow: \"none\",\n                    border: \"none\",\n                    color: \"var(--red)\",\n                },\n            }}\n            onChange={ e => setValue(e.target.value) }\n            { ...rest }\n        >\n            <option\n                value=\"--placeholder\"\n                disabled={ true }\n                css={{\n                    color: \"grey\",\n                    backgroundColor: \"var(--dark)\",\n                }}\n            >\n                { placeholder || \"Select\" }\n            </option>\n\n            {\n                Object.keys(options).map(option =>\n                    <option\n                        key={ option }\n                        value={ selectValue === \"key\" ? option : selectValue === \"keyvalue\" ? option + \" (\" + options[option] + \")\" : options[option] }\n                        css={{\n                            backgroundColor: \"var(--dark)\",\n                        }}\n                    >\n                        { selectKey === \"value\" ? options[option] : selectKey === \"keyvalue\" ? option + \" (\" + options[option] + \")\" : option }\n                    </option>\n                )\n            }\n        </select>\n\n        <IoIosArrowDown css={{\n            marginLeft: -15,\n            pointerEvents: \"none\",\n        }} />\n    </div>\n);\n\nconst AbstractInput = ({ type, title, description, pretext, placeholder, value, setValue, ...rest }) => (\n    <div css={{\n        marginBottom: 15,\n        padding: 10,\n        backgroundColor: \"rgba(100, 100, 100, .2)\",\n        borderRadius: 3,\n        transition: \"background-color var(--transition-default-time) ease-out\",\n        \":hover\": {\n            backgroundColor: \"rgba(100, 100, 100, .3)\",\n        },\n        \":focus-within\": {\n            backgroundColor: \"rgba(100, 100, 100, .3)\",\n        },\n    }}>\n        <div css={{\n            marginBottom: 0,\n            color: \"rgba(200, 200, 200, .5)\",\n            fontSize: \".7em\",\n            fontWeight: 500,\n            textTransform: \"uppercase\",\n        }}>\n            { title }\n        </div>\n        <div css={{\n            marginBottom: 5,\n            color: \"rgba(200, 200, 200, .3)\",\n            fontSize: \".6em\",\n            fontWeight: 500,\n        }}>\n            { description }\n        </div>\n        <div css={{\n            display: \"flex\",\n            alignItems: \"center\",\n            fontSize: \".8em\",\n        }}>\n            {\n                pretext\n                ?   <div css={{\n                        marginRight: 5,\n                        color: \"lightgrey\",\n                    }}>\n                        { pretext }\n                    </div>\n                :   null\n            }\n            <input\n                type={ type }\n                placeholder={ placeholder }\n                value={ value }\n                css={{\n                    flex: \"auto\",\n                    backgroundColor: \"transparent\",\n                    border: \"none\",\n                    \":disabled\": {\n                        color: \"darkgrey\",\n                    },\n                    \":invalid\": {\n                        outline: 0,\n                        boxShadow: \"none\",\n                        border: \"none\",\n                        color: \"var(--red)\",\n                    },\n                }}\n                onChange={ e => setValue(e.target.value) }\n                { ...rest }\n            />\n        </div>\n    </div>\n);\n\nexport const Text = (props) => (\n    <AbstractInput\n        type=\"text\"\n        { ...props }\n    />\n);\n\nexport const URL = (props) => (\n    <AbstractInput\n        type=\"url\"\n        { ...props }\n    />\n);\n\nexport const Email = (props) => (\n    <AbstractInput\n        type=\"email\"\n        { ...props }\n    />\n);\n\nexport const Phone = (props) => (\n    <AbstractInput\n        type=\"tel\"\n        { ...props }\n    />\n);\n\nexport const Dropdown = ({ title, description, pretext, placeholder, ...rest }) => (\n    <div css={{\n        marginBottom: 15,\n        padding: 10,\n        backgroundColor: \"rgba(100, 100, 100, .2)\",\n        borderRadius: 3,\n        transition: \"background-color var(--transition-default-time) ease-out\",\n        \":hover\": {\n            backgroundColor: \"rgba(100, 100, 100, .3)\",\n        },\n        \":focus-within\": {\n            backgroundColor: \"rgba(100, 100, 100, .3)\",\n        },\n    }}>\n        <div css={{\n            marginBottom: 0,\n            color: \"rgba(200, 200, 200, .5)\",\n            fontSize: \".7em\",\n            fontWeight: 500,\n            textTransform: \"uppercase\",\n        }}>\n            { title }\n        </div>\n        <div css={{\n            marginBottom: 5,\n            color: \"rgba(200, 200, 200, .3)\",\n            fontSize: \".6em\",\n            fontWeight: 500,\n        }}>\n            { description }\n        </div>\n        <div css={{\n            display: \"flex\",\n            alignItems: \"center\",\n            fontSize: \".8em\",\n        }}>\n            {\n                pretext\n                ?   <div css={{\n                        marginRight: 5,\n                        color: \"lightgrey\",\n                    }}>\n                        { pretext }\n                    </div>\n                :   null\n            }\n            <BaseDropdown\n                placeholder={ placeholder }\n                { ...rest }\n            />\n        </div>\n    </div>\n);\n"],"sourceRoot":""}