{"version":3,"sources":["webpack:///./src/pages/new.jsx","webpack:///./src/components/Input.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components_Helmet__WEBPACK_IMPORTED_MODULE_3__","_components_Input__WEBPACK_IMPORTED_MODULE_4__","_utils_isBrowser__WEBPACK_IMPORTED_MODULE_5__","_emotion_core__WEBPACK_IMPORTED_MODULE_6__","connect","state","me","global","_ref","_React$useState","React","useState","processing","setProcessing","_React$useState2","undefined","success","setSuccess","_React$useState3","name","setName","_React$useState4","icon","setIcon","Object","css","_ref2","title","description","_ref3","_ref4","_ref5","_ref6","placeholder","value","setValue","maxLength","required","pattern","_ref7","_ref8","_ref9","_ref10","_ref11","disabled","_ref12","onClick","length","test","isBrowser","window","fetch","process","method","headers","Accept","Content-Type","Authorization","token","body","JSON","stringify","then","res","ok","json","Error","statusText","navigate","code","catch","e","console","error","Toggle","enabled","toggleHandler","_emotion_core__WEBPACK_IMPORTED_MODULE_8__","_emotion_css__WEBPACK_IMPORTED_MODULE_5__","display","alignItems","opacity","width","height","padding","justifyContent","borderRadius","backgroundColor","boxShadow","transition","cursor",":hover",":focus-within","transform","checked","type","onChange","BaseDropdown","options","selectKey","selectValue","rest","_objectWithoutPropertiesLoose","_extends","target","keys","map","option","key","react_icons_io__WEBPACK_IMPORTED_MODULE_7__","marginLeft","pointerEvents","AbstractInput","pretext","_ref13","_ref14","Text","props","URL","Email","Dropdown","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20"],"mappings":"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","file":"component---src-pages-new-jsx-31a09f6460450bcc04d6.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { navigate } from \"gatsby\";\n\nimport Helmet from \"../components/Helmet\";\nimport * as Input from \"../components/Input\";\nimport isBrowser from \"../utils/isBrowser\";\n\nconst NewOrgPage = ({ me }) => {\n    const [ processing, setProcessing ] = React.useState(false);\n    const [ success, setSuccess ] = React.useState(undefined);\n\n    const [ name, setName ] = React.useState(\"\");\n    const [ icon, setIcon ] = React.useState(\"\");\n\n    const createOrg = () => {\n        if (processing) return;\n\n        if (name.length < 1 || name.length > 32) return setSuccess(false);\n        if (icon && icon.length > 2048) return setSuccess(false);\n        if (icon && !/^(((?:https:\\/\\/)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w\\-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?\\.(?:png|jpg|jpeg|bmp))$/i.test(icon)) return setSuccess(false);\n\n        setProcessing(true);\n\n        if (!isBrowser()) return;\n\n        window.fetch(process.env.API_URL + \"/orgs\", {\n            method: \"POST\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": me.token,\n            },\n            body: JSON.stringify({\n                name,\n                icon,\n            }),\n        }).then(res => {\n            if (res.ok) return res.json();\n            throw new Error(res.statusText);\n        }).then(res => {\n            setSuccess(true);\n            navigate(\"/\" + res.code);\n        }).catch((e) => {\n            console.error(e);\n            setSuccess(false);\n            setProcessing(false);\n        });\n    };\n\n    return (\n        <div css={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"100%\",\n            maxWidth: 720,\n            margin: \"0 auto\",\n        }}>\n            <Helmet\n                title=\"Create Organization\"\n                description=\"Create a new organization in Glee.\"\n            />\n            <div css={{ fontSize: \"1.2em\", margin: \"25px 0\" }}>Create a new organization</div>\n\n            <div css={{ color: \"lightgrey\", fontSize: \".9em\", marginBottom: 5 }}>Organization Details</div>\n            <div css={{ color: \"darkgrey\", fontSize: \".8em\", marginBottom: 15 }}>Information required by Glee.</div>\n            <div css={{ width: \"100%\" }}>\n                <div>\n                    <Input.Text\n                        title=\"Name\"\n                        description=\"Publicly visible name of your organization\"\n                        placeholder=\"e.g. Glee\"\n                        value={ name }\n                        setValue={ setName }\n                        maxLength={ 32 }\n                        required={ true }\n                    />\n                    <Input.URL\n                        title=\"Icon\"\n                        description=\"An https URL to the logo or icon of the organization\"\n                        placeholder=\"e.g. https://github.com/gleeapp.png\"\n                        value={ icon }\n                        setValue={ setIcon }\n                        pattern=\"https://.*\"\n                        maxLength={ 2048 }\n                    />\n                </div>\n            </div>\n\n            <div css={{\n                fontSize: \".8em\",\n                marginTop: 10,\n            }}>\n                <div css={{ marginBottom: 10 }}>\n                    {\n                        success === true\n                        ?   <div css={{ color: \"var(--green)\" }}>{ name || \"Your organization\" } has been successfully created!</div>\n                        :   success === false\n                            ?   <div css={{ color: \"var(--red)\" }}>Unable to create the organization. Make sure you've entered the details correctly. If it doesn't work, please contact support.</div>\n                            :   <div css={{ color: \"var(--green)\" }}>Start for free, upgrade later!</div>\n                    }\n                </div>\n\n                <button\n                    disabled={ processing || !name }\n                    css={{\n                        fontSize: \"inherit\",\n                        \":disabled\": {\n                            color: \"var(--light)\",\n                            backgroundColor: \"rgba(100, 100, 100, .2)\",\n                            cursor: \"disallowed\",\n                        },\n                    }}\n                    onClick={ createOrg }\n                >\n                    {\n                        processing\n                        ?   \"Creating\"\n                        :   \"Create Organization\"\n                    }\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(\n    state => ({ me: state.global.me }),\n    null,\n)(NewOrgPage);\n","import React from \"react\";\nimport { IoIosArrowDown } from \"react-icons/io\";\n\nexport const Toggle = ({ enabled, toggleHandler, disabled }) => (\n    <label css={{\n        display: \"flex\",\n        alignItems: \"center\",\n        opacity: disabled ? .5 : 1,\n    }}>\n        <div css={{\n            width: 45,\n            height: 24,\n            padding: 2,\n            display: \"flex\",\n            justifyContent: \"center\",\n            borderRadius: 50,\n            backgroundColor: enabled ? \"var(--green)\" : \"rgba(100, 100, 100, .2)\",\n            boxShadow: \"0px 0px 3px -2px black inset\",\n            transition: \"background-color var(--transition-default-time) ease\",\n            cursor: disabled ? \"not-allowed\" : \"pointer\",\n            \":hover\": {\n                backgroundColor: enabled ? \"#34c759\" : \"rgba(100, 100, 100, .3)\",\n            },\n            \":focus-within\": {\n                backgroundColor: enabled ? \"#34c759\" : \"rgba(100, 100, 100, .3)\",\n            },\n        }}>\n            <div css={{\n                width: 20,\n                height: 20,\n                borderRadius: 50,\n                backgroundColor: \"var(--light)\",\n                boxShadow: \"0px 0px 3px -2px black\",\n                transform: enabled ? \"translateX(10px)\" : \"translateX(-10px)\",\n                transition: \"transform var(--transition-default-time) ease, background-color var(--transition-default-time) ease\",\n            }} />\n        </div>\n        <input\n            disabled={ disabled }\n            checked={ enabled }\n            type=\"checkbox\"\n            css={{\n                appearance: \"none\",\n            }}\n            onChange={ toggleHandler }\n        />\n    </label>\n);\n\nexport const BaseDropdown = ({ options, selectKey, selectValue, value, setValue, placeholder, ...rest }) => (\n    <div css={{\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n    }}>\n        { /* eslint-disable-next-line jsx-a11y/no-onchange */ }\n        <select\n            value={ value ? value : \"--placeholder\" }\n            css={{\n                appearance: \"none\",\n                flex: \"auto\",\n                color: \"inherit\",\n                backgroundColor: \"transparent\",\n                border: \"none\",\n                cursor: \"pointer\",\n                paddingRight: 15,\n                \":invalid\": {\n                    outline: 0,\n                    boxShadow: \"none\",\n                    border: \"none\",\n                    color: \"var(--red)\",\n                },\n            }}\n            onChange={ e => setValue(e.target.value) }\n            { ...rest }\n        >\n            <option\n                value=\"--placeholder\"\n                disabled={ true }\n                css={{\n                    color: \"grey\",\n                    backgroundColor: \"var(--dark)\",\n                }}\n            >\n                { placeholder || \"Select\" }\n            </option>\n\n            {\n                Object.keys(options).map(option =>\n                    <option\n                        key={ option }\n                        value={ selectValue === \"key\" ? option : selectValue === \"keyvalue\" ? option + \" (\" + options[option] + \")\" : options[option] }\n                        css={{\n                            backgroundColor: \"var(--dark)\",\n                        }}\n                    >\n                        { selectKey === \"value\" ? options[option] : selectKey === \"keyvalue\" ? option + \" (\" + options[option] + \")\" : option }\n                    </option>\n                )\n            }\n        </select>\n\n        <IoIosArrowDown css={{\n            marginLeft: -15,\n            pointerEvents: \"none\",\n        }} />\n    </div>\n);\n\nconst AbstractInput = ({ type, title, description, pretext, placeholder, value, setValue, ...rest }) => (\n    <div css={{\n        marginBottom: 15,\n        padding: 10,\n        backgroundColor: \"rgba(100, 100, 100, .2)\",\n        borderRadius: 3,\n        transition: \"background-color var(--transition-default-time) ease-out\",\n        \":hover\": {\n            backgroundColor: \"rgba(100, 100, 100, .3)\",\n        },\n        \":focus-within\": {\n            backgroundColor: \"rgba(100, 100, 100, .3)\",\n        },\n    }}>\n        <div css={{\n            marginBottom: 0,\n            color: \"rgba(200, 200, 200, .5)\",\n            fontSize: \".7em\",\n            fontWeight: 500,\n            textTransform: \"uppercase\",\n        }}>\n            { title }\n        </div>\n        <div css={{\n            marginBottom: 5,\n            color: \"rgba(200, 200, 200, .3)\",\n            fontSize: \".6em\",\n            fontWeight: 500,\n        }}>\n            { description }\n        </div>\n        <div css={{\n            display: \"flex\",\n            alignItems: \"center\",\n            fontSize: \".8em\",\n        }}>\n            {\n                pretext\n                ?   <div css={{\n                        marginRight: 5,\n                        color: \"lightgrey\",\n                    }}>\n                        { pretext }\n                    </div>\n                :   null\n            }\n            <input\n                type={ type }\n                placeholder={ placeholder }\n                value={ value }\n                css={{\n                    flex: \"auto\",\n                    backgroundColor: \"transparent\",\n                    border: \"none\",\n                    \":disabled\": {\n                        color: \"darkgrey\",\n                    },\n                    \":invalid\": {\n                        outline: 0,\n                        boxShadow: \"none\",\n                        border: \"none\",\n                        color: \"var(--red)\",\n                    },\n                }}\n                onChange={ e => setValue(e.target.value) }\n                { ...rest }\n            />\n        </div>\n    </div>\n);\n\nexport const Text = (props) => (\n    <AbstractInput\n        type=\"text\"\n        { ...props }\n    />\n);\n\nexport const URL = (props) => (\n    <AbstractInput\n        type=\"url\"\n        { ...props }\n    />\n);\n\nexport const Email = (props) => (\n    <AbstractInput\n        type=\"email\"\n        { ...props }\n    />\n);\n\nexport const Phone = (props) => (\n    <AbstractInput\n        type=\"tel\"\n        { ...props }\n    />\n);\n\nexport const Dropdown = ({ title, description, pretext, placeholder, ...rest }) => (\n    <div css={{\n        marginBottom: 15,\n        padding: 10,\n        backgroundColor: \"rgba(100, 100, 100, .2)\",\n        borderRadius: 3,\n        transition: \"background-color var(--transition-default-time) ease-out\",\n        \":hover\": {\n            backgroundColor: \"rgba(100, 100, 100, .3)\",\n        },\n        \":focus-within\": {\n            backgroundColor: \"rgba(100, 100, 100, .3)\",\n        },\n    }}>\n        <div css={{\n            marginBottom: 0,\n            color: \"rgba(200, 200, 200, .5)\",\n            fontSize: \".7em\",\n            fontWeight: 500,\n            textTransform: \"uppercase\",\n        }}>\n            { title }\n        </div>\n        <div css={{\n            marginBottom: 5,\n            color: \"rgba(200, 200, 200, .3)\",\n            fontSize: \".6em\",\n            fontWeight: 500,\n        }}>\n            { description }\n        </div>\n        <div css={{\n            display: \"flex\",\n            alignItems: \"center\",\n            fontSize: \".8em\",\n        }}>\n            {\n                pretext\n                ?   <div css={{\n                        marginRight: 5,\n                        color: \"lightgrey\",\n                    }}>\n                        { pretext }\n                    </div>\n                :   null\n            }\n            <BaseDropdown\n                placeholder={ placeholder }\n                { ...rest }\n            />\n        </div>\n    </div>\n);\n"],"sourceRoot":""}